*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root{
  font-size: 62.5%;

  --hue:240;
  --color-base-white: hsl(0, 0%, 100%);
  --color-base-gray-100: hsl(0, 0%, 96%);
  --color-base-gray-300: hsl(var(--hue), 6%, 58%);
  --color-base-gray-500: hsl(0, 0%, 24%);
  --color-base-gray-900: hsl(var(--hue), 6%, 13%);

}

html, body, input {
  font-family: 'Mulish', sans-serif;
  
}

body{
  font-size: 1.6rem;
  background-color: var(--color-base-white);
}


#app {
  display: grid;
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container {
  padding: 1.6rem 3.2rem;

  width: min(112rem, 100%);
  margin: 0 auto;
}



main {
  background-color: var(--color-base-gray-100);

  overflow-y: scroll; /*use isso para que apenas no main tenha um scroll no conteudo (o header e o footer ficam estáticos*/
}

header, nav, nav ul{
  display: flex;
  align-items: center;
  gap: 7.2rem;
  font-weight: 700;
}

nav ul {
  list-style: none;
  font-size: 1.8rem;
  color: var(--color-base-gray-300);
}

ul li.active {
  color: var(--color-base-gray-900);
}

header form {

  flex: 1; /*flex 1 faz com que o form utilize todo o espaço que tenha disponível para ele*/
}

.input-wrapper label {
  /*fazer isso para esconder o label*/
  width: 1px;
  height: 1px;

  overflow: hidden;
  position: absolute; 
}

.input-wrapper input {
  width: 100%;
  padding: 1.6rem;

  background-color: var(--color-base-gray-100);
  border: 0;
  border-radius: .6rem;

  font-size: 1.6rem;
  font-weight: 600;

}

.input-wrapper input::placeholder {
  opacity: 0.56;
  color: var(--color-base-gray-500);
}
.avatar {
  width: 4.2rem;
  height: 4.2rem;

  object-fit: cover; /*cover faz com que a imagem não deforme ao definir um tamanho (caso ela fosse retangular dentro da área de um quadrado*/

  border-radius: 50%; /*50% deixa uma imagem quadrada redonda*/
}

/*galeria*/

main h1 {
  padding-top: 1.6rem;
  font-size: 2.4rem;
}

.gallery {
  margin-top: 3.2rem;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2.2rem;
}

.item {
  background-color: var(--color-base-white);
  border-radius: .8rem;
  overflow: hidden;
}

.item img {
  width: 100%;
  aspect-ratio: 16/9;
  object-fit: cover;

  display: block;

  /*aqui se configura a transition que foi escolhido no img:hover*/
  transition-property: all;
  transition-duration: 145ms;
  transition-delay: 0;
  transition-timing-function: ease-in-out;

  /*pode ser escrito assim: transition: all 145ms ease-in-out;*/
}

.item img:hover {
  filter: hue-rotate(7deg) contrast(101%) saturate(200%);

  transform: scale(1.1) rotate(-2deg);
}

.details {
  padding: 2.2rem;
  background-color: var(--color-base-white);

  z-index: 1;
  position: relative;
}

.details h2 {
  font-size: 1.8rem;
}

.tags {
  margin-top: 1.2rem;
}

.tags span{
  padding: .6rem;
  background-color: var(--color-base-gray-100);
  border-radius: .4rem;

  line-height: 0;
  font-size: 1.2rem;

  text-transform: uppercase;
}

footer p {
  font-size: 16px;
  text-align: center; 
  padding: 1.6rem;
  font-weight: 600;
}



/*ANIMAÇÔES DA PAGINA */

/*Aqui foi definido o valor da variavel startY diferente para o header e para o footer, isso faz com que eu possa usar a mesma animação para os dois, porem com valores diferente de startY*/

header {
  --startY:-100%;
  animation: move .2s;
}

footer {
  --startY:100%;
  animation: move .2s;
}

@keyframes move {
  from{
    transform: translateY(var(--startY));
  }
}

/*animação appear*/

/*nessa animação foi criada uma variavel delay, para se definir um valor de delay para iniciara a animação appear. foi definido um valor diferente para o delay em cada item no html (nesse caso utilizamos um delay de .2s a mais para cada item seguinte)*/

.item {
  --delay: .2s;
  animation: appear .4s var(--delay) backwards;
}


@keyframes appear {
  0%{
    opacity: 0;
    transform: scale(0.7);
  }

  50%{
    transform: scale(1.2);
  }
}